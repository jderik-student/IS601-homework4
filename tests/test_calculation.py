# pylint: disable=unnecessary-dunder-call, invalid-name
'''
    This file contains tests to test the Calculation class
'''

from decimal import Decimal
import pytest
from calculator.calculation import Calculation
from calculator.operations import add, subtract, multiply, divide
from faker import Faker


fake = Faker()

def test_operations():
    """
        This test verifies that the Calculation class and the operation class are working as intended
        using randomized test data generated by Faker
    """
    a = Decimal(fake.random_number(digits=2))
    b = Decimal(fake.random_number(digits=2))
    operation = fake.random_element(elements=[add, subtract, multiply, divide])

    expected = operation(a,b)

    calc = Calculation.create(a, b, operation)
    assert calc.calculate() == expected, f"Failed {operation.__name__} operation with {a} and {b}"

def test_repr():
    """
        Tests the string representation of the Calculation class
    """
    calc = Calculation.create(6, 2, add)
    expected = "Calculation(6, 2, add)"
    assert calc.__repr__() == expected

def test_divide_by_zero_test():
    """
        Tests division by zero to verify that it returns a ValueError
    """
    with pytest.raises(ValueError, match="Cannot divide by zero"):
        Calculation(3, 0, divide).calculate()
